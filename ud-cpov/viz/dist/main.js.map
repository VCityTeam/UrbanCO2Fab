{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/json_parser.js","webpack:///./src/json_loader.js","webpack:///external \"fs\"","webpack:///./src/viz.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","get_data","json_object","data","nodes","get_nodes","edges","get_edges","console","log","JSON","stringify","get_option_by_mode","ret","list_options","options","undefined","info","option","get_list_options","list_mode","list_option","element","push","get_modes","get_data_and_options","json_path","json_obj","get_graph_from_json_file","parse","__dirname","require","NetworkManagerSingleton","start_mode","id_network","id_button_location","instance","this","constructor","network","current_mode","destroy","json_data_path","json_options_path","add_button_to_view","test","label","viz","length","toString","button","document","createElement","new_label","createTextNode","appendChild","onclick","param","target","innerText","draw","getElementById","insertBefore","get_option","container","vis","Network","window","addEventListener","init_from_json_path"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import { get_graph_from_json_file } from \"./json_loader\";\r\n\r\n\r\nfunction get_data(json_object) {\r\n/**\r\n * Get the data for vis.Network\r\n * @param: json object that contains nodes and edges\r\n * @returns: data, a dictionnary ready for vis.Netowrk\r\n */\r\n    const data = {\r\n        nodes: get_nodes(json_object),\r\n        edges: get_edges(json_object)\r\n      };\r\n    console.log(\"Data for vis.Network : %s\", JSON.stringify(data));\r\n    return data;\r\n}\r\n\r\nfunction get_nodes(json_object) {\r\n/**\r\n * Extract nodes from json object\r\n * @param: json_object with nodes\r\n * @returns: list of nodes as : [\r\n *        { id: 0, label: \"2000\", level: 0, group:0},\r\n *        { id: 1, label: \"2001\", level: 1, group:0},\r\n *        ]\r\n */\r\n    var ret = json_object.nodes;\r\n    //TODO verification for key\r\n    return ret;\r\n    \r\n}\r\n\r\nfunction get_edges(json_object) {\r\n/**\r\n * Extract edges from json object\r\n * @param: json_object with edges\r\n * @returns: list of edges as : [\r\n *       { from: 4, to: 5},\r\n *       { from: 6, to: 7, color: \"black\", label:\"split\"},\r\n *        ]\r\n */\r\n    var ret = json_object.edges;\r\n    //TODO verification for key\r\n    return ret;\r\n    \r\n}\r\n\r\nfunction get_modes(json_object){\r\n/**\r\n * Get all the mode specified in the json object. \r\n * !!! They sould be found only in json.options.mode\r\n * @param: json object with json.options\r\n * @return: list[str] with unicity\r\n */\r\n    var ret = [undefined]; // if mode is not present inside the json. The default value will be undifined\r\n    var list_option = json_object.options;\r\n    for (const option in list_option) {               // -\\\r\n        if (list_option.hasOwnProperty(option)) {     // - > = for in\r\n            const element = list_option[option];      // -/\r\n            if (element.mode !== undefined){\r\n                ret.push(element.mode);\r\n            }\r\n        }\r\n    }\r\n    console.log(\"List mode found : %s\", ret);\r\n    return ret;\r\n}\r\n\r\nfunction get_option_by_mode(json_object, mode){\r\n/**\r\n * Get option for vis.Network from json config.\r\n * !!! No default filling or any smart thing. All options will come from the json\r\n * @param json_object with json.options\r\n * @param mode : string to match options or \"undefined\" for default \r\n * @returns json object if option found if not null\r\n */\r\n    var ret = null;\r\n     \r\n    var list_options = json_object.options;\r\n    if (list_options === undefined){\r\n        console.info(\"No options provided\");\r\n        return ret;\r\n    }\r\n\r\n    for (const key in list_options) {\r\n        if (list_options.hasOwnProperty(key)) {\r\n            const option = list_options[key];\r\n            \r\n            if (mode === option.mode){\r\n                ret = option;\r\n                return ret;\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n\r\n\r\n}\r\n\r\nfunction get_list_options(json_object) {\r\n/**\r\n * Get all options for all view\r\n * @param json_object json object for vis.Network\r\n * @returns list of json object with complete and ready options for vis.Network\r\n */    \r\n    var ret = [];\r\n    var list_mode = get_modes(json_object);\r\n\r\n    for (const option in list_mode) {\r\n        if (list_mode.hasOwnProperty(option)) {\r\n            const mode = list_mode[option];\r\n\r\n            ret.push({\r\n                \"label\": mode,\r\n                \"option\": get_option_by_mode(json_object, mode)\r\n            });\r\n            \r\n        }\r\n    }\r\n\r\n    console.log(\"List options found : %o\", ret);\r\n    return ret;\r\n    \r\n}\r\n\r\nexport function get_data_and_options(json_path){\r\n    const json_obj = get_graph_from_json_file(json_path);\r\n    const ret = {\r\n        \"data\": get_data(json_obj),\r\n        \"list_options\": get_list_options(json_obj)\r\n    };\r\n    return ret;\r\n}\r\n\r\n// test\r\n\r\nvar json_obj = get_graph_from_json_file('input/urban_graph.json');\r\nget_data(json_obj);\r\nget_list_options(json_obj);","//import { readFileSync } from 'fs';\r\nimport * as fs from 'fs';\r\n/**\r\n * For fs import with webpack we need to add \r\n *   node: {\r\n    fs: \"empty\"\r\n  }\r\n * In the webpack config file \r\n */\r\n\r\nexport function get_graph_from_json_file(json_path) {\r\n/**\r\n * Read and parse a json file\r\n * @returns json parsed object \r\n * */    \r\n\r\n    var ret = null\r\n\r\n    var data = fs.readFileSync(json_path);\r\n    console.log(\"JSON read at : %s\", json_path);\r\n    ret = JSON.parse(data);\r\n    console.log(\"JSON parsed : %s\", JSON.stringify(ret));\r\n    return ret;\r\n/*\r\n    var ret = {\r\n        nodes: [\r\n              {\r\n                id: 0,\r\n                label: \"2000\",\r\n                level: 0,\r\n                group: \"timeFrame\"\r\n            },\r\n            {\r\n                id: 1,\r\n                label: \"2001\",\r\n                level: 1,\r\n                group: \"timeFrame\"\r\n            },\r\n            {\r\n                id: 2,\r\n                label: \"2002\",\r\n                level: 2,\r\n                group: \"timeFrame\"\r\n            },\r\n            {\r\n                id: 3,\r\n                label: \"2003\",\r\n                level: 3,\r\n                group: \"timeFrame\"\r\n            },\r\n            {\r\n                id: 4,\r\n                label: \"2004\",\r\n                level: 4,\r\n                group: \"timeFrame\"\r\n            },\r\n            {\r\n                id: 5,\r\n                label: \"2005\",\r\n                level: 5,\r\n                group: \"timeFrame\"\r\n            },\r\n            {\r\n                id: 6,\r\n                label: \"C_2000\",\r\n                level: 0,\r\n                group: \"consensusScenario\"\r\n            },\r\n            {\r\n                id: 7,\r\n                label: \"C_2002\",\r\n                level: 2,\r\n                group: \"consensusScenario\"\r\n            },\r\n            {\r\n                id: 8,\r\n                label: \"C_2004\",\r\n                level: 4,\r\n                group: \"consensusScenario\"\r\n            },\r\n            {\r\n                id: 9,\r\n                label: \"P_2001\",\r\n                level: 1,\r\n                group: \"propositionScenario\"\r\n            },\r\n            {\r\n                id: 10,\r\n                label: \"P_2001\",\r\n                level: 1,\r\n                group: \"propositionScenario\"\r\n            },\r\n            {\r\n                id: 11,\r\n                label: \"P_2004\",\r\n                level: 4,\r\n                group: \"propositionScenario\"\r\n            },\r\n            {\r\n                id: 12,\r\n                label: \"C_2004-2\",\r\n                level: 4,\r\n                group: \"consensusScenario\"\r\n            }\r\n        ],\r\n        edges: [\r\n              {\r\n                from: 0,\r\n                to: 1\r\n            },\r\n            {\r\n                from: 1,\r\n                to: 2\r\n            },\r\n            {\r\n                from: 2,\r\n                to: 3\r\n            },\r\n            {\r\n                from: 3,\r\n                to: 4\r\n            },\r\n            {\r\n                from: 4,\r\n                to: 5\r\n            },\r\n            {\r\n                from: 6,\r\n                to: 7,\r\n                color: \"red\",\r\n                label: \"modification\"\r\n            },\r\n            {\r\n                from: 7,\r\n                to: 8,\r\n                color: \"blue\",\r\n                label: \"split\"\r\n            },\r\n            {\r\n                from: 7,\r\n                to: 12,\r\n                color: \"blue\",\r\n                label: \"split\"\r\n            },\r\n            {\r\n                from: 9,\r\n                to: 7,\r\n                color: \"green\",\r\n                label: \"merge\"\r\n            },\r\n            {\r\n                from: 10,\r\n                to: 7,\r\n                color: \"green\",\r\n                label: \"merge\"\r\n            },\r\n            {\r\n                from: 7,\r\n                to: 11,\r\n                color: \"black\",\r\n                label: \"destruction\"\r\n            }\r\n    \r\n        ],\r\n        options:\r\n        [\r\n            {\r\n                viz:\r\n                {\r\n                    edges: \r\n                            {\r\n                                smooth: \r\n                                {\r\n                                    type: \"cubicBezier\"\r\n                                },\r\n                                arrows: { to: true },\r\n                                font:{ align: \"middle\"},\r\n                                length:170\r\n                            },\r\n                    groups:\r\n                            {\r\n                                useDefaultGroups: true,\r\n                                timeFrame:{\r\n                                    //id: 0,\r\n                                    color: \"white\",\r\n                                    hidden: \"true\",\r\n                                    //label: \"Time legend\"\r\n                                },\r\n                                consensusScenario:{\r\n                                    //id: 1,\r\n                                    color: \"green\",\r\n                                    //label: \"Consensus scenario\"\r\n                                },\r\n                                propositionScenario:{\r\n                                    //id: 2,\r\n                                    color: \"yellow\",\r\n                                    //label: \"Proposition scenario\"\r\n                                }\r\n                            },\r\n                    physics:\r\n                            {\r\n                                stabilization: true,\r\n                                //wind: { x: 0, y: 0 }\r\n                            }\r\n                }\r\n                \r\n            },\r\n            {\r\n                mode:\"hierarchy\",\r\n                viz:{\r\n                    edges: \r\n                    {\r\n                        smooth: \r\n                        {\r\n                            type: \"cubicBezier\"\r\n                        },\r\n                        arrows: { to: true },\r\n                        font:{ align: \"middle\"},\r\n                        length:170\r\n                    },\r\n                    groups:\r\n                    {\r\n                        useDefaultGroups: true,\r\n                        timeFrame:{\r\n                            color: \"white\",\r\n                            hidden: false,\r\n                            physics: false,\r\n                            //id: 0,\r\n                            //mode: \"hierarchy\",\r\n                            //label: \"Time legend\"\r\n                        },\r\n                        consensusScenario:{\r\n                            //id: 1,\r\n                            color: \"green\",\r\n                            //label: \"Consensus scenario\"\r\n                        },\r\n                        propositionScenario:{\r\n                            //id: 2,\r\n                            color: \"yellow\",\r\n                            //label: \"Proposition scenario\"\r\n                        }\r\n                    },\r\n                    layout: \r\n                    {\r\n                        hierarchical: \r\n                        {\r\n                            direction: \"LR\",\r\n                            sortMethod: \"directed\",\r\n                            treeSpacing: 100,\r\n                            parentCentralization: false\r\n                        },\r\n                        randomSeed: 2\r\n                    },\r\n                    interaction: { \r\n                        dragNodes: false,\r\n                        dragView: false,\r\n                        hover: true,\r\n                        zoomView: false\r\n\r\n                    },\r\n                    physics: \r\n                    {\r\n                    enabled: true,\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n*/\r\n    return ret;\r\n\r\n}\r\n\r\n// test\r\nget_graph_from_json_file(__dirname + '/input/urban_data.json');","module.exports = require(\"fs\");","//import * as vis from 'vis-network';\r\n\r\nimport { get_data_and_options } from \"./json_parser\";\r\n\r\nclass NetworkManagerSingleton {\r\n    constructor(start_mode=\"default\", id_network=\"mynetwork\", id_button_location=\"mybuttons\"){\r\n    /**\r\n     * Constructor for singleton\r\n     */\r\n        console.log(1);\r\n        const instance = this.constructor.instance;\r\n        console.log(1);\r\n        if(instance){\r\n            return instance;\r\n        }\r\n        else{\r\n            console.log(1);\r\n            this.network = null;\r\n            this.data = null;\r\n            this.list_option = null;\r\n            this.current_mode = start_mode;\r\n            this.id_network = id_network;\r\n            this.id_button_location = id_button_location;\r\n            this.constructor.instance = this;\r\n        }\r\n\r\n    }\r\n\r\n    destroy() {\r\n    /**\r\n     * Kill the simulation network  \r\n     */\r\n        if (this.network !== null) {\r\n            console.info(\"Network destroyed\");\r\n          this.network.destroy();\r\n          this.network = null;\r\n        }\r\n    }\r\n\r\n    init_from_json_path(json_data_path, json_options_path){\r\n        console.log(\"NetworkManager init from json data: %s || options: %s\", json_data_path, json_options_path);\r\n        this.data = get_data_and_options(json_data_path).data;\r\n        this.list_option = get_data_and_options(json_options_path).list_options;\r\n        this.add_button_to_view();\r\n    }\r\n\r\n    get_option(mode){\r\n    /**\r\n     * Extract the matching options to a specific mode from the list_option\r\n     * /!\\ Working specificaly with vis.network\r\n     * @param mode specific mode correspondong to a specific view\r\n     * @return ready to used json for vis-network\r\n     */\r\n        console.log(\"Get option : %s\", mode);\r\n        var test = mode;\r\n        if (mode === \"default\"){\r\n            test = undefined\r\n        }\r\n        console.log(1);\r\n        for (const key in this.list_option) {\r\n            console.log(1);\r\n            if (this.list_option.hasOwnProperty(key)) {\r\n                console.log(1);\r\n                const element = this.list_option[key];\r\n                if (test === element.label){\r\n                    console.log(2);\r\n                    return element.option.viz\r\n                }\r\n            }\r\n        }\r\n        return this.list_option[0].option.viz;\r\n    }\r\n\r\n    add_button_to_view(){\r\n    /**\r\n     * Add button to navigate between view. There will be one button by options present in list_option\r\n     * onClick will be a draw()\r\n     */\r\n        console.log(\"Try to add %s button(s)\", this.list_option.length.toString());\r\n        for (const key in this.list_option) {\r\n            if (this.list_option.hasOwnProperty(key)) {\r\n                const option = this.list_option[key];\r\n\r\n                var button = document.createElement(\"button\");\r\n\r\n                const new_label = option.label === undefined ? \"default\" : option.label;\r\n                console.log(\"Creating button with label : %s\", new_label.toString());\r\n                var label = document.createTextNode(new_label.toString());\r\n                button.appendChild(label);\r\n\r\n                button.onclick = function (param) {\r\n                    console.log(\"Button %s clicked : %o\", param.target.innerText, param);\r\n                    n.draw(param.target.innerText);\r\n                };\r\n\r\n                var element = document.getElementById(this.id_button_location);\r\n                element.insertBefore(button, mode);\r\n\r\n                console.info(\"Button added : %s\", mode.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(mode=\"default\") {\r\n    /**\r\n     * Draw the network inside the client page\r\n     */\r\n        this.current_mode = mode;\r\n        this.destroy();  \r\n    \r\n        if (this.data === null){\r\n            this.data = get_data_and_options(json_path).data;\r\n        }\r\n        if (this.list_option === null){\r\n            this.list_option = get_data_and_options(json_path).list_options;\r\n            this.add_button_to_view();\r\n        }\r\n    \r\n        const options = this.get_option(this.current_mode);\r\n        const container = document.getElementById(this.id_network);\r\n        console.log(\"Drawing Container : %o Data : %o Options : %o\", container, this.data, options);\r\n        var network = new vis.Network(container, this.data, options);\r\n        console.info(\"Network drawn\");\r\n        console.log(network);\r\n        }\r\n}\r\n\r\n// test\r\nconst json_data_path = __dirname + \"/input/urban_data.json\";\r\nconst json_options_path = __dirname + \"/input/urban_option.json\";\r\nconsole.log(\"path\");\r\nwindow.addEventListener(\"load\", () => {\r\n    console.log(__dirname);\r\n    var n = new NetworkManagerSingleton();\r\n    n.init_from_json_path(json_data_path, json_options_path);\r\n    //n.draw();\r\n    });"],"sourceRoot":""}